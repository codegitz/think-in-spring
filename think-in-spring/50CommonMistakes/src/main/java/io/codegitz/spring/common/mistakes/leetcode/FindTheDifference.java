package io.codegitz.spring.common.mistakes.leetcode;

import java.util.HashMap;
import java.util.Map;

/**
 *
 * 389. Find the Difference
 * Easy
 *
 * 2280
 *
 * 361
 *
 * Add to List
 *
 * Share
 * You are given two strings s and t.
 *
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 *
 * Return the letter that was added to t.
 *
 *
 *
 * Example 1:
 *
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 * Example 2:
 *
 * Input: s = "", t = "y"
 * Output: "y"
 *
 *
 * Constraints:
 *
 * 0 <= s.length <= 1000
 * t.length == s.length + 1
 * s and t consist of lowercase English letters.
 *
 * @author Codegitz
 * @date 2022/2/7 21:32
 **/
public class FindTheDifference {
    public char findTheDifference(String s, String t) {
        if(s == null || t == null){
            return ' ';
        }
        char[] sc = s.toCharArray();
        Map<Character,Integer> map = new HashMap<>();
        for(int i = 0 ;i < sc.length; i++){
            map.put(sc[i],map.getOrDefault(sc[i],0) + 1);
        }
        char[] tc = t.toCharArray();
        for(int j = 0 ; j < tc.length; j++){
            if(!map.containsKey(tc[j])){
                return tc[j];
            }
            if (map.get(tc[j]) == 0){
                return tc[j];
            }
            map.put(tc[j],map.get(tc[j]) - 1);
        }
        return ' ';
    }
}
